<?xml version="1.0" encoding="UTF-8" ?><!-- -*- nxml -*- -->

<!--
The contents of this file are subject to the University of Utah Public
License (the "License"); you may not use this file except in compliance
with the License.

Software distributed under the License is distributed on an "AS IS"
basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
License for the specific language governing rights and limitations under
the License.

The Original Source Code is SCIRun, released March 12, 2001.

The Original Source Code was developed by the University of Utah.
Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
University of Utah. All Rights Reserved.
-->

<!--% require("../Utilities/Publish/srdoc.rb") %-->
<!--% doc = Doc.create(Doc::DocBook) %-->
<!--% doc.insertDocType("book") %-->

<book>
  <title><acronym>XML</acronym> Module Specification Language (v <!--%= doc.edition %-->)</title>

  <part>
    <title>Introduction</title>
    <chapter id="chapter.introduction">
      <title>Justification</title>
      <para>This section introduces the SCIRun module specification
      language.</para>
      <sect1>
	<title>Purpose</title>
	<para>Writing a module specification should be one of the first
	steps in the design and implementation of a module.</para>
	<para>A module specification documents the use, design,
	implementation, and testing of a SCIRun module.</para>
	<para><acronym>HTML</acronym> and <acronym>PDF</acronym>
	documention for a module are generated from a module specification.  A
	module's source code can be partially generated from its module
	specification.</para>
	<para>A module specification is written in an
	<acronym>XML</acronym>-based mark-up language.  The rest of this
	document describes the grammer and semantics of the module
	specificition language.</para>
      </sect1>
      <sect1>
	<title><acronym>XML</acronym> Language</title>
	<para>An <acronym>XML</acronym> formulation of the module
	specification is used to achieve the following goals:</para>
	<variablelist>
	  <varlistentry>
	    <term>Data centric viewpoint</term>
	    <listitem>
	      <para>Represent the module specification as a set of
	      data to be used in several contexts.</para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Uniformity</term>
	    <listitem>
	      <para>Specify all modules the same way</para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Validation</term>
	    <listitem>
	      <para>Validate (check for correctness and completeness)
	      module specifications.</para>
	    </listitem>
	  </varlistentry>
	</variablelist>
	<para>The module specification mark-up language is similar in
	concept to <acronym>HTML</acronym>, but has a different,
	smaller set of tags, and a simpler, more regular set of
	document composition rules.
	</para>
      </sect1>
      <sect1>
	<title>Module Specification Schema</title>
	<para>An XML Schema defines a set of elements, element
	attributes, and the way they may be used in order to produce a
	valid document.  The module specification language definition
	is available as a <acronym>DTD</acronym> and as a RELAX NG
	schema.</para>
	<para></para>
	<para>The module specification <acronym>DTD</acronym> can be
	found, relative to the top of the SCIRun tree, here:
	<literallayout
	class="monospaced">src/Dataflow/XML/component.dtd</literallayout>.
	The RELAX NG schema can be found here: <literallayout
	class="monospaced">src/Dataflow/XML/component.rnc</literallayout></para>
	</sect1>
    </chapter>

    <chapter id="chap.edit-mode-spec">
      <title>Editing a Module Description</title>
      <sect1>
	<title>Emacs</title>
	<para>Any text editor can be used to create a module
	specification document's content.  However, because it is easy
	to get lost in the <quote>noise</quote> of
	<acronym>XML</acronym> syntax, it is best to use an
	<acronym>XML</acronym>/Schema (e.g. <acronym>DTD</acronym>,
	Relax NG) aware editor.  This type of editor will help
	construct a valid module specification document.  Emacs is one
	such editor.</para>
	<para>Emacs supports editing environments
	<acronym>PSGML</acronym> mode and nxml mode.  These modes
	highlight <acronym>XML</acronym> syntax, indent nested
	elements and their content, and suggest elements based
	on the position of the insertion point.  Nxml mode
	performs on-the-fly validation (<acronym>PSGML</acronym> does
	not).</para>
	<para>Nxml mode can be downloaded from:</para>
	<literallayout class="monospaced">
	  http://www.thaiopensource.com/download/
	</literallayout>
	<para>Information on the use of nxml mode can be found here:
	<literallayout>
	  http://www.xmlhack.com/read.php?item=2061	  
	</literallayout></para>
	<para>PSGML mode can be downloaded from:</para>
	<literallayout class="monospaced">
	  http://sourceforge.net/projects/psgml/	  
	</literallayout>
	<para>Information on the use of psgml mode can be found here:
	<literallayout class="monospaced">
	  http://www.lysator.liu.se/~lenst/about_psgml/	  
	</literallayout></para>
      </sect1>

      <sect1>
	<title>Nxml Prerequisites</title>
	<sect2>
	  <title>Installation</title>
	  <para>Nxml mode should be installed in a sub-directory of
	  emacs'<filename>site-lisp</filename> directory.  Typically
	  <filename>/usr/share/emacs/sitelisp/nxml</filename>.</para>
	  <para>After installing nxml, file
	  <filename>component.rnc</filename> must be copied to
	  <filename>nxml/schema</filename>.</para>
	  <para>The following lines must be added to file
	  <filename>nxml/schema/schemas.xml</filename>:
	  <literallayout class="monospaced">
&lt;documentElement prefix="" localName="component" typeId="Component"/&gt;
&lt;typeId id="Component" uri="component.rnc"/&gt;
	  </literallayout>
	  </para>
	</sect2>
	<sect2>
	  <title>.emacs (nxml mode)</title>
	  <para>The following lisp code should be inserted into Emacs'
	  <filename>.emacs</filename> initialization file prior to using
	  nxml mode:</para>
	  <programlisting>
(load "nxml/rng-auto")
(setq auto-mode-alist
(append
'(("\\.xml" . nxml-mode)
("\\.rxml" . nxml-mode)
("\\.html" . nxml-mode)
("\\.rhtml" . nxml-mode))
auto-mode-alist))
(make-face 'nxml-delimited-data-face)
(make-face 'nxml-name-face)
(make-face 'nxml-ref-face)
(make-face 'nxml-delimiter-face)
(make-face 'nxml-comment-content-face)
(make-face 'nxml-comment-delimiter-face)
(set-face-foreground 'nxml-delimited-data-face "grey55")
(set-face-foreground 'nxml-name-face "#257A25")
(set-face-foreground 'nxml-ref-face "#9292C9")
(set-face-foreground 'nxml-delimiter-face "#9292C9")
(set-face-foreground 'nxml-comment-content-face "orange")
(set-face-foreground 'nxml-comment-delimiter-face "orange")
	  </programlisting>
	</sect2>
      </sect1>

      <sect1>
	<title>PSGML Prerequisites</title>
	<sect2>
	<title>.emacs (<acronym>SGML</acronym> mode)</title>
	<para>The following lisp code should be inserted into Emacs'
	<filename>.emacs</filename> initialization file prior to using
	<acronym>SGML</acronym> mode:</para>
	<programlisting>
;; Setup autoloading
(require 'psgml)
(autoload 'sgml-mode "psgml" "Major mode to edit SGML files" t)
(autoload 'xml-mode "psgml" "Major mode to edit XML files." t) 
(setq auto-mode-alist
(append
'(("\\.xml" . xml-mode)
("\\.html" . sgml-mode))
auto-mode-alist))

;; Indent tags but not content.
(setq sgml-indent-step 2)
(setq sgml-indent-data nil)

;; Create appropriate "faces"
(make-face 'sgml-start-tag-face) 
(make-face 'sgml-end-tag-face) 
(make-face 'sgml-entity-face) 
(make-face 'sgml-doctype-face)
(make-face 'sgml-comment-face) 

;; Assign colors to faces
(set-face-foreground 'sgml-start-tag-face "grey55") 
(set-face-foreground 'sgml-end-tag-face "seagreen") 
(set-face-foreground 'sgml-entity-face "yellow2") 
(set-face-foreground 'sgml-doctype-face "orange3") 
(set-face-foreground 'sgml-comment-face "lightblue") 

;; Assign faces to sgml objects
(setq sgml-set-face t)
(setq sgml-markup-faces 
'((comment   . sgml-comment-face) 
(start-tag . sgml-start-tag-face) 
(end-tag   . sgml-end-tag-face) 
(doctype   . sgml-doctype-face) 
(entity    . sgml-entity-face))) 
	</programlisting>
	</sect2>
      </sect1>

      <sect1>
	<title>Creating a Module Specification</title>
	<para>To create a new module specification follow these
	steps:</para>
	<orderedlist>
	  <listitem>
	    <para></para>
	  </listitem>
	</orderedlist>
      </sect1>

      <sect1>
	<title>Validating a Module Description</title>
	<para></para>
      </sect1>

    </chapter>
    <chapter>
      <title>Example</title>
      <para></para>
      <literallayout class="monospaced">
      </literallayout>
    </chapter>

  </part>

  <part>
    <title>Module Description Element Reference</title>
    <partintro>
      <sect1>
	<title>Organization</title>
	<para></para>
      </sect1>
      <sect1>
	<title>Content Models</title>
	<para></para>
      </sect1>
      <sect1>
	<title>Attribute Types</title>
	<para></para>
      </sect1>
    </partintro>
    <reference>
      <title>Module Description Element Reference</title>

      <!--===== author -->
      <refentry id="refentry.author">
	<refnamediv>
	  <refname>author</refname>
	  <refpurpose>Full name of one author</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">author</sgmltag> ::= #PCDATA</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">is the full name of
	  one author</sgmltag></para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag
	  class="element">author</sgmltag>: <link
	  linkend="refentry.authors"><sgmltag
	  class="element">authors</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== authors -->
      <refentry id="refentry.authors">
	<refnamediv>
	  <refname><sgmltag class="element">authors</sgmltag></refname>
	  <refpurpose>List a module's authors</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">authors</sgmltag> ::= <link linkend="refentry.author"><sgmltag class="element">author</sgmltag></link>+</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">authors</sgmltag> lists
	  the authors of a module.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag
	  class="element">authors</sgmltag>: <link
	  linkend="refentry.overview"><sgmltag
	  class="element">overview</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== ccfile -->
      <refentry id="refentry.ccfile">
	<refnamediv>
	  <refname>ccfile</refname>
	  <refpurpose>Name of a c++ source file</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">ccfile</sgmltag> ::= #PCDATA</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">ccfile</sgmltag>
	  specifies the name of one c++ source code file.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag
	  class="element">ccfile</sgmltag>: <link linkend="refentry.implementation"><sgmltag
	  class="element">implementation</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== cfile -->
      <refentry id="refentry.cfile">
	<refnamediv>
	  <refname>cfile</refname>
	  <refpurpose>Name of a c source file</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">cfile</sgmltag> ::= #PCDATA</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">cfile</sgmltag>
	  specifies the name of one c source code file.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag
	  class="element">cfile</sgmltag>: <link linkend="refentry.implentation"><sgmltag
	  class="element">implementation</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== component -->
      <refentry id="refentry.component">
	<refnamediv>
	  <refname>component</refname>
	  <refpurpose>Module description top-level element.</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">component</sgmltag> ::= <link linkend="refentry.overview"><sgmltag class="element">overview</sgmltag></link>, <link linkend="refentry.implementation"><sgmltag class="element">implementation</sgmltag></link>?, <link linkend="refentry.io"><sgmltag class="element">io</sgmltag></link>, <link linkend="refentry.gui"><sgmltag class="element">gui</sgmltag></link>?, <link linkend="refentry.nets"><sgmltag class="element">nets</sgmltag></link>? ,<link linkend="refentry.testing"><sgmltag class="element">testing</sgmltag></link>?
	    </synopsis>
	  </refsect2>
	  <refsect2>
	    <title>Attributes</title>
	    <informaltable>
	      <tgroup cols="3">
		<thead>
		  <row>
		    <entry>Name</entry>
		    <entry>Type</entry>
		    <entry>Default</entry>
		  </row>
		</thead>
		<tbody>
		  <row>
		    <entry><sgmltag class="attribute">name</sgmltag></entry>
		    <entry>CDATA</entry>
		    <entry><emphasis>Required</emphasis></entry>
		  </row>
		  <row>
		    <entry><sgmltag class="attribute">category</sgmltag></entry>
		    <entry>CDATA</entry>
		    <entry><emphasis>Required</emphasis></entry>
		  </row>
		</tbody>
	      </tgroup>
	    </informaltable>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Top-level module description element.  All module
	  descriptions start with this element.  All other elements are enclosed
	  by this one.</para>
	</refsect1>
	<refsect1>
	  <title>Attributes</title>
	  <variablelist>
	    <varlistentry>
	      <term>name</term>
	      <listitem>
		<para><sgmltag class="attribute">Name</sgmltag>
		specifies a module's name.  <sgmltag
		class="attribute">Name</sgmltag>'s value must be unique
		among module names in a module's category.</para>
	      </listitem>
	    </varlistentry>
	    <varlistentry>
	      <term>category</term>
	      <listitem>
		<para><sgmltag class="attribute">Category</sgmltag> specifies the
		module's category.</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <!--===== datatype -->
      <refentry id="refentry.datatype">
	<refnamediv>
	  <refname>datatype</refname>
	  <refpurpose>Name of a SCIRun datatype</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">datatype</sgmltag> ::= (#PCDATA)</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">datatype</sgmltag> is the fully qualified name of a SCIRun datatype.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag class="element">datatype</sgmltag>: <link linkend="refentry"><sgmltag class="element">file</sgmltag></link>, <link linkend="refentry.parameter"><sgmltag class="element">parameter</sgmltag></link>, <link linkend="refentry.port"><sgmltag class="element">port</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== description -->    
      <refentry id="description">
	<refnamediv>
	  <refname><sgmltag class="element">description</sgmltag></refname>
	  <refpurpose>description of some aspect of a module</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">description</sgmltag> ::= (<link linkend="refentry.section"><sgmltag class="element">section</sgmltag></link>|<link linkend="refentry.developer"><sgmltag class="element">developer</sgmltag></link>|<link linkend="refentry.p"><sgmltag class="element">p</sgmltag></link>|<link linkend="refentry.latex"><sgmltag class="element">latex</sgmltag></link>|<link linkend="refentry.figure"><sgmltag class="element">figure</sgmltag></link>|<link linkend="refentry.pre"><sgmltag class="element">pre</sgmltag></link>|
	    <link linkend="refentry.orderedlist"><sgmltag class="element">orderedlist</sgmltag></link>|<link linkend="refentry.unorderedlist"><sgmltag class="element">unorderedlist</sgmltag></link>|<link linkend="refentry.desclist"><sgmltag class="element">desclist</sgmltag></link>|<link linkend="refentry.note"><sgmltag class="element">note</sgmltag></link>|<link linkend="refentry.tip"><sgmltag class="element">tip</sgmltag></link>|<link linkend="refentry.warning"><sgmltag class="element">warning</sgmltag></link>)*</synopsis>
	  </refsect2>
	  <refsect2>
	    <title>Attributes</title>
	    <informaltable>
	      <tgroup cols="3">
		<thead>
		  <row>
		    <entry>Name</entry>
		    <entry>Type</entry>
		    <entry>Default</entry>
		  </row>
		</thead>
		<tbody>
		  <row>
		    <entry><sgmltag class="attribute">id</sgmltag></entry>
		    <entry>ID</entry>
		    <entry><emphasis>None</emphasis></entry>
		  </row>
		</tbody>
	      </tgroup>
	    </informaltable>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">description</sgmltag>
	  is a small documentation environment.  It is used in several places to
	  document a particular aspect of a module.  It offers many markup
	  tags equivalent to those found in xhtml.  A number of tags are
	  unique to the task of writing module descriptions.</para>
	</refsect1>
	<refsect1>
	  <title>Attributes</title>
	  <variablelist>
	    <varlistentry>
	      <term><sgmltag class="attribute">id</sgmltag></term>
	      <listitem>
		<para><sgmltag class="attribute">Id</sgmltag> is an
		identifying string for a <sgmltag
		class="element">description</sgmltag> element. It must be unique
		within a module description and must begin with a letter.</para>
		<para>Attribute <sgmltag class="attribute">id</sgmltag>
		is used with element <link linkend="refentry.xref"><sgmltag
		class="element">xref</sgmltag></link> to create cross-references
		within a module description document.</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain
	  <sgmltag>description</sgmltag>: <simplelist type="inline">
	  <member><link linkend="refentry.device"><sgmltag class="element">device</sgmltag></link></member>
	  <member><link linkend="refentry.file"><sgmltag class="element">file</sgmltag></link></member>
	  <member><link linkend="refentry.gui"><sgmltag class="element">gui</sgmltag></link></member>
	  <member><link linkend="refentry.overview"><sgmltag class="element">overview</sgmltag></link></member>
	  <member><link linkend="refentry.parameter"><sgmltag class="element">parameter</sgmltag></link></member>
	  <member><link linkend="refentry.plan"><sgmltag class="element">plan</sgmltag></link></member>
	  <member><link linkend="refentry.port"><sgmltag class="element">port</sgmltag></link></member>
	  </simplelist>
	  </para>
	</refsect1>
      </refentry>

      <!--===== developer -->
      <refentry id="refentry.developer">
	<refnamediv>
	  <refname><sgmltag class="element">developer</sgmltag></refname>
	  <refpurpose>Documentation intended for module developers</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">developer</sgmltag> ::= (<link linkend="refentry.p"><sgmltag class="element">p</sgmltag></link>|<link linkend="refentry.latex"><sgmltag class="element">latex</sgmltag></link>|<link linkend="refentry.figure"><sgmltag class="element">figure</sgmltag></link>|<link linkend="refentry.pre"><sgmltag class="element">pre</sgmltag></link>|
	    <link linkend="refentry.orderedlist"><sgmltag class="element">orderedlist</sgmltag></link>|<link linkend="refentry.unorderedlist"><sgmltag class="element">unorderedlist</sgmltag></link>|<link linkend="refentry.desclist"><sgmltag class="element">desclist</sgmltag></link>|<link linkend="refentry.note"><sgmltag class="element">note</sgmltag></link>|<link linkend="refentry.tip"><sgmltag class="element">tip</sgmltag></link>|<link linkend="refentry.warning"><sgmltag class="element">warning</sgmltag></link>)</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">developer</sgmltag>
	  presents information intended for module developers.  <sgmltag
	  class="element">Developer</sgmltag>'s content model is
	  similar to element <link
	  linkend="refentry.description"><sgmltag
	  class="element">description</sgmltag></link>'s content
	  model, but may not be divided into sections.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag
	  class="element">developer</sgmltag>: <link
	  linkend="refentry.description"><sgmltag
	  class="element">description</sgmltag></link>, <link
	  linkend="refentry.net"><sgmltag
	  class="element">net</sgmltag></link>, <link
	  linkend="refentry.section"><sgmltag
	  class="element">section</sgmltag></link>, <link
	  linkend="refentry.step"><sgmltag
	  class="element">step</sgmltag></link>.</para>
	</refsect1>
      </refentry>

      <!--===== examplesr -->
      <refentry id="refentry.examplesr">
	<refnamediv>
	  <refname>examplesr</refname>
	  <refpurpose>Specifies the path of a SCIRun network file which
	  demonstrates the use of a module.
	  <emphasis>Deprecated</emphasis></refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">examplesr</sgmltag> ::= #PCDATA</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Specifies the path of a SCIRun network file which
	  demonstrates the use of a module.  Element <sgmltag
	  class="element">examplesr</sgmltag> is deprecated.  Element <link
	  linkend="refentry.nets"><sgmltag class="element">nets</sgmltag></link>
	  is now used to demonstrate the use of a module in a network.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag
	  class="element">examplesr</sgmltag>: <link
	  linkend="refentry.overview"><sgmltag
	  class="element">overview</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== ffile -->
      <refentry id="refentry.ffile">
	<refnamediv>
	  <refname>ffile</refname>
	  <refpurpose>Names a fortran source file</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">ffile</sgmltag> ::= #PCDATA</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">ffile</sgmltag>
	  specifies the name of one fortran source code file.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag
	  class="element">ffile</sgmltag>: <link linkend="refentry.implementation"><sgmltag
	  class="element">implementation</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== figure -->
      <refentry id="refentry.figure">
	<refnamediv>
	  <refname>figure</refname>
	  <refpurpose>A captioned image</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">figure</sgmltag> ::= (<link linkend="refentry.img"><sgmltag class="element">img</sgmltag></link>,<link linkend="refentry.caption"><sgmltag class="element">caption</sgmltag></link>)</synopsis>
	  </refsect2>
	  <refsect2>
	    <title>Attributes</title>
	    <informaltable>
	      <tgroup cols="3">
		<thead>
		  <row>
		    <entry>Name</entry>
		    <entry>Type</entry>
		    <entry>Default</entry>
		  </row>
		</thead>
		<tbody>
		  <row>
		    <entry><sgmltag class="attribute">id</sgmltag></entry>
		    <entry>ID</entry>
		    <entry><emphasis>None</emphasis></entry>
		  </row>
		</tbody>
	      </tgroup>
	    </informaltable>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">figure</sgmltag> is a
	  captioned image.</para>
	</refsect1>
	<refsect1>
	  <title>Attributes</title>
	  <variablelist>
	    <varlistentry>
	      <term><sgmltag class="attribute">id</sgmltag></term>
	      <listitem>
		<para><sgmltag class="attribute">Id</sgmltag> is an
		identifying string for a <sgmltag class="element">figure</sgmltag>
		element. <sgmltag class="attribute">Id</sgmltag> must be unique within
		a module specification and must begin with a letter.</para>
		<para>Attribute <sgmltag class="attribute">id</sgmltag>
		is used with element <link linkend="refentry.xref"><sgmltag
		class="element">xref</sgmltag></link> to create cross-references
		within a module specification document.</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag class="element">figure</sgmltag>: <link linkend="refentry.description"><sgmltag class="element">description</sgmltag></link>,<link linkend="refentry.desclistdef"><sgmltag class="element">desclistdef</sgmltag></link>,<link linkend="refentry.developer"><sgmltag class="element">developer</sgmltag></link>,<link linkend="refentry.listitem"><sgmltag class="element">listitem</sgmltag></link>,<link linkend="refentry.net"><sgmltag class="element">net</sgmltag></link>,<link linkend="refentry.note"><sgmltag class="element">note</sgmltag></link>,<link linkend="refentry.section"><sgmltag class="element">section</sgmltag></link>,<link linkend="refentry.step"><sgmltag class="element">step</sgmltag></link>,<link linkend="refentry.tip"><sgmltag class="element">tip</sgmltag></link>,<link linkend="refentry.warning"><sgmltag class="element">warning</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== file -->    
      <refentry id="refentry.file">
	<refnamediv>
	  <refname>file</refname>
	  <refpurpose>Describe type and content of data in a file</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">file</sgmltag> ::= (<link linkend="refentry.description"><sgmltag class="element">description</sgmltag></link>,<link linkend="refentry.datatype">datatype</link>)</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag>file</sgmltag> describes the type and
	  content of data in a file.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag class="element">file</sgmltag>: <link linkend="refentry.inputs"><sgmltag class="element">inputs</sgmltag></link>,<link linkend="refentry.outputs"><sgmltag class="element">outputs</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== gui -->    
      <refentry id="refentry.gui">
	<refnamediv>
	  <refname><sgmltag class="element">gui</sgmltag></refname>
	  <refpurpose>Documents the use of a module's graphical user interface</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">gui</sgmltag> ::= ((<link linkend="refentry.description"><sgmltag class="element">description</sgmltag></link>, <link linkend="refentry.parameter"><sgmltag class="element">parameter</sgmltag></link>+, (<link linkend="refentry.img"><sgmltag class="element">img</sgmltag></link>, <link linkend="refentry.caption"><sgmltag class="element">caption</sgmltag></link>?)*))+</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">gui</sgmltag>
	  documents the use of a module's graphical user interface.</para>
	  <para>Use of content model fragment <synopsis>(<link
	  linkend="refentry.img"><sgmltag class="element">img</sgmltag></link>,
	  <link linkend="refentry.caption"><sgmltag
	  class="element">caption</sgmltag></link>?)*</synopsis> is deprecated.
	  Instead, screenshots of a module's <acronym>GUI</acronym> should be
	  presented within the <link linkend="refentry.description"><sgmltag
	  class="element">description</sgmltag></link> element using <link
	  linkend="refentry.figure"><sgmltag
	  class="element">figure</sgmltag></link>s and <link
	  linkend="refentry.xref"><sgmltag
	  class="element">xref</sgmltag></link>s.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag class="element">gui</sgmltag>: <link
	  linkend="refentry.component"><sgmltag class="element">component</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== implementation -->    
      <refentry id="refentry.implementation">
	<refnamediv>
	  <refname><sgmltag class="element">implementation</sgmltag></refname>
	  <refpurpose>Lists a module's c++, c, and fortran source files</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">implementation</sgmltag> ::= (<link linkend="refentry.ccfile"><sgmltag class="element">ccfile</sgmltag></link> | <link linkend="refentry.cfile"><sgmltag class="element">cfile</sgmltag></link> | <link linkend="refentry.ffile"><sgmltag class="element">ffile</sgmltag></link>)+</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Lists a module's c++, c, and fortran source files. </para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain
	  <sgmltag class="element">implementation</sgmltag>: <link
	  linkend="refentry.component"><sgmltag class="element">component</sgmltag></link>.</para>
	</refsect1>
      </refentry>

      <!--===== inputs -->
      <refentry id="refentry.inputs">
	<refnamediv>
	  <refname>inputs</refname>
	  <refpurpose>Documents a module's inputs</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">inputs</sgmltag> ::= (<link linkend="refentry.file"><sgmltag class="element">file</sgmltag></link>|<link linkend="refentry.port"><sgmltag class="element">port</sgmltag></link>|<link linkend="refentry.device"><sgmltag class="element">device</sgmltag></link>)+</synopsis>
	  </refsect2>
	  <refsect2>
	    <title>Attributes</title>
	    <informaltable>
	      <tgroup cols="3">
		<thead>
		  <row>
		    <entry>Name</entry>
		    <entry>Type</entry>
		    <entry>Default</entry>
		  </row>
		</thead>
		<tbody>
		  <row>
		    <entry>
		      <sgmltag class="attribute">lastportdynamic</sgmltag>
		    </entry>
		    <entry>
		      <emphasis>Enumeration:</emphasis>
		      <simplelist>
			<member>no</member>
			<member>yes</member>
		      </simplelist>
		    </entry>
		    <entry>no</entry>
		  </row>
		</tbody>
	      </tgroup>
	    </informaltable>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">inputs</sgmltag>
	  specifies and documents a module's inputs.  An input may come
	  from a port, file, or device.</para>
	</refsect1>
	<refsect1>
	  <title>Attributes</title>
	  <variablelist>
	    <varlistentry>
	      <term>lastportdynamic</term>
	      <listitem>
		<para>Specifies whether a new instance of a module's
		last port is dynamically created when a connection is
		made to a module's last port.</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag class="element">inputs</sgmltag>: <link linkend="refentry.io"><sgmltag class="element">io</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== label -->
      <refentry id="refentry.label">
	<refnamediv>
	  <refname><sgmltag class="element">label</sgmltag></refname>
	  <refpurpose>A label (text) associated with a <acronym>GUI</acronym>
	  widget.</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">label</sgmltag> ::= (#PCDATA)</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">label</sgmltag>
	  specifies text associated with a <acronym>GUI</acronym>
	  widget.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag
	  class="element">label</sgmltag>: <link
	  linkend="refentry.parameter"><sgmltag
	  class="element">parameter</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== modref -->
      <refentry id="refentry.modref">
	<refnamediv>
	  <refname><sgmltag class="element">modref</sgmltag></refname>
	  <refpurpose>Cross-reference to a module specification document.</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">modref</sgmltag> ::= (#PCDATA)</synopsis>
	  </refsect2>
	  <refsect2>
	    <title>Attributes</title>
	    <informaltable>
	      <tgroup cols="3">
		<thead>
		  <row>
		    <entry>Name</entry>
		    <entry>Type</entry>
		    <entry>Default</entry>
		  </row>
		</thead>
		<tbody>
		  <row>
		    <entry>package</entry>
		    <entry>NMTOKEN</entry>
		    <entry><emphasis>Required</emphasis></entry>
		  </row>
		  <row>
		    <entry>name</entry>
		    <entry>CDATA</entry>
		    <entry><emphasis>Required</emphasis></entry>
		  </row>
		</tbody>
	      </tgroup>
	    </informaltable>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">modref</sgmltag> is a
	  cross-reference to another module specification.  Attributes
	  <sgmltag class="attribute">name</sgmltag> and <sgmltag
	  class="attribute">package</sgmltag> uniquely specify the
	  referenced module.  <sgmltag class="element">Modref</sgmltag>
	  may be empty or may contain cross-reference text.  If
	  <sgmltag class="element">modref</sgmltag> is empty, suitable
	  cross-refence text will be generated.</para>
	</refsect1>
	<refsect1>
	  <title>Attributes</title>
	  <variablelist>
	    <varlistentry>
	      <term>name</term>
	      <listitem>
		<para>Name of module to be referenced.</para>
	      </listitem>
	    </varlistentry>
	    <varlistentry>
	      <term>package</term>
	      <listitem>
		<para>Name of package to which the referenced module
		belongs.  The package name is spelled as it is in the
		source code tree.</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag
	  class="element">modref</sgmltag>: <link
	  linkend="refentry.title"><sgmltag
	  class="element">title</sgmltag></link>, <link
	  linkend="refentry.summary"><sgmltag
	  class="element">summary</sgmltag></link>, <link
	  linkend="refentry.author"><sgmltag
	  class="element">author</sgmltag></link>, <link
	  linkend="refentry.caption"><sgmltag
	  class="element">caption</sgmltag></link>, <link
	  linkend="refentry.p"><sgmltag
	  class="element">p</sgmltag></link>.</para>
	</refsect1>
      </refentry>

      <!--===== outputs -->
      <refentry id="refentry.outputs">
	<refnamediv>
	  <refname><sgmltag class="element">outputs</sgmltag></refname>
	  <refpurpose>Documents a module's outputs</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">outputs</sgmltag> ::= (<link linkend="refentry.file"><sgmltag class="element">file</sgmltag></link>|<link linkend="refentry.port"><sgmltag class="element">port</sgmltag></link>|<link linkend="refentry.device"><sgmltag class="element">device</sgmltag></link>)+</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">outputs</sgmltag>
	  specifies and documents a module's outputs.  An output may come
	  from a port, file, or device.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag class="element">outputs</sgmltag>: <link linkend="refentry.io"><sgmltag class="element">io</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== io -->
      <refentry id="refentry.io">
	<refnamediv>
	  <refname><sgmltag class="element">io</sgmltag></refname>
	  <refpurpose>Specifies a module's inputs and outputs</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">io</sgmltag> ::= <link linkend="refentry.inputs"><sgmltag class="element">inputs</sgmltag></link>, <link linkend="refentry.outputs"><sgmltag class="element">outputs</sgmltag></link></synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">io</sgmltag> is a description of data entering and leaving a module's input and output ports. </para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag class="element">io</sgmltag>: <link linkend="refentry.component"><sgmltag class="element">component</sgmltag></link>.</para>
	</refsect1>
      </refentry>

      <!--===== net -->
      <refentry id="refentry.net">
	<refnamediv>
	  <refname>net</refname>
	  <refpurpose>Demonstrates the use of a module within a small network</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">net</sgmltag> := (<link linkend="refentry.title"><sgmltag class="element">title</sgmltag></link>,(<link linkend="refentry.section"><sgmltag class="element">section</sgmltag></link>|<link linkend="refentry.developer"><sgmltag class="element">developer</sgmltag></link>|<link linkend="refentry.p"><sgmltag class="element">p</sgmltag></link>|<link linkend="refentry.latex"><sgmltag class="element">latex</sgmltag></link>|<link linkend="refentry.figure"><sgmltag class="element">figure</sgmltag></link>|<link linkend="refentry.pre"><sgmltag class="element">pre</sgmltag></link>|
	    <link linkend="refentry.orderedlist"><sgmltag class="element">orderedlist</sgmltag></link>|<link linkend="refentry.unorderedlist"><sgmltag class="element">unorderedlist</sgmltag></link>|<link linkend="refentry.desclist"><sgmltag class="element">desclist</sgmltag></link>|<link linkend="refentry.note"><sgmltag class="element">note</sgmltag></link>|<link linkend="refentry.tip"><sgmltag class="element">tip</sgmltag></link>|<link linkend="refentry.warning"><sgmltag class="element">warning</sgmltag></link>)*)</synopsis>
	  </refsect2>
	  <refsect2>
	    <title>Attributes</title>
	    <informaltable>
	      <tgroup cols="3">
		<thead>
		  <row>
		    <entry>Name</entry>
		    <entry>Type</entry>
		    <entry>Default</entry>
		  </row>
		</thead>
		<tbody>
		  <row>
		    <entry><sgmltag class="attribute">id</sgmltag></entry>
		    <entry>ID</entry>
		    <entry><emphasis>None</emphasis></entry>
		  </row>
		</tbody>
	      </tgroup>
	    </informaltable>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">net</sgmltag>
	  is an environment for documenting the use of a
	  module within a SCIRun network.  Element <sgmltag
	  class="element">net</sgmltag>'s content model is identical to
	  element <link linkend="refentry.description"><sgmltag
	  class="element">description</sgmltag></link>'s content model.</para>
	</refsect1>
	<refsect1>
	  <title>Attributes</title>
	  <variablelist>
	    <varlistentry>
	      <term><sgmltag class="attribute">id</sgmltag></term>
	      <listitem>
		<para><sgmltag class="attribute">Id</sgmltag> is an
		identifying string for a <sgmltag
		class="element">description</sgmltag> element. It must be unique
		within a module description and must begin with a letter.</para>
		<para>Attribute <sgmltag class="attribute">id</sgmltag>
		is used with element <link linkend="refentry.xref"><sgmltag
		class="element">xref</sgmltag></link> to create cross-references
		within a module description document.</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <!--===== nets -->
      <refentry id="refentry.nets">
	<refnamediv>
	  <refname><sgmltag class="element">nets</sgmltag></refname>
	  <refpurpose>Documents the use of a module via one or more simple networks</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">nets</sgmltag> ::= (<link linkend="refentry.net"><sgmltag class="element">net</sgmltag></link>+)</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">nets</sgmltag> documents the use of a module via one or more simple networks</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag class="element">nets</sgmltag>: <link linkend="refentry.component"><sgmltag class="element">component</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== overview -->
      <refentry id="refentry.overview">
	<refnamediv>
	  <refname><sgmltag class="element">overview</sgmltag></refname>
	  <refpurpose>Lists a module's authors and describes a module's
	  purpose.</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">overview</sgmltag> ::= <link linkend="refentry.authors"><sgmltag class="element">authors</sgmltag></link>, <link linkend="refentry.summary"><sgmltag class="element">summary</sgmltag></link>, <link linkend="refentry.description"><sgmltag class="element">description</sgmltag></link>, <link linkend="refentry.examplesr"><sgmltag class="element">examplesr</sgmltag></link>?</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">overview</sgmltag> lists a module's authors and describes a module's
	  purpose.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag class="element">overview</sgmltag>: <link linkend="refentry.component"><sgmltag class="element">component</sgmltag></link>.</para>
	</refsect1>
      </refentry>

      <!--===== p -->
      <refentry id="refentry.p">
	<refnamediv>
	  <refname>p</refname>
	  <refpurpose>A paragraph</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <synopsis><sgmltag>p</sgmltag> ::= <link
	  linkend="refentry.firstterm"><sgmltag
	  class="element">firstterm</sgmltag></link>|<link linkend="refentry.keyword"><sgmltag class="element">keyword</sgmltag></link>|<link linkend="refentry.userinput"><sgmltag class="element">userinput</sgmltag></link>|<link linkend="refentry.abbr"><sgmltag class="element">abbr</sgmltag></link>|<link linkend="refentry.latex"><sgmltag class="element">latex</sgmltag></link>|<link linkend="refentry.path"><sgmltag class="element">path</sgmltag></link>|<link linkend="refentry.emph"><sgmltag class="element">emph</sgmltag></link>|
	  <link linkend="refentry.quote"><sgmltag class="element">quote</sgmltag></link>|<link linkend="refentry.link"><sgmltag class="element">rlink</sgmltag></link>|<link linkend="refentry.slink"><sgmltag class="element">slink</sgmltag></link>|<link linkend="refentry.ulink"><sgmltag class="element">ulink</sgmltag></link>|<link linkend="refentry.modref"><sgmltag class="element">modref</sgmltag></link>|<link linkend="refentry.xref"><sgmltag class="element">xref</sgmltag></link>|<link linkend="refentry.email"><sgmltag class="element">email</sgmltag></link>|<link linkend="refentry.cite"><sgmltag class="element">cite</sgmltag></link></synopsis>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para></para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para></para>
	</refsect1>
      </refentry>


      <!--===== parameter -->
      <refentry id="refentry.parameter">
	<refnamediv>
	  <refname>parameter</refname>
	  <refpurpose>Describes one <acronym>GUI</acronym> <quote>parameter</quote></refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">parameter</sgmltag> ::= (<link linkend="refentry.widget"><sgmltag>widget</sgmltag></link>,<link linkend="refentry.datatype"><sgmltag>datatype</sgmltag></link>,<link linkend="refentry.label"><sgmltag>label</sgmltag></link>,<link linkend="refentry.description"><sgmltag>description</sgmltag></link>)</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">parameter</sgmltag>
	  documents the purpose and use of a module <acronym>GUI</acronym>
	  <quote>parameter</quote>.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag class="element">parameter</sgmltag>: <link linkend="refentry.gui"><sgmltag class="element">gui</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== plan -->
      <refentry id="refentry.plan">
	<refnamediv>
	  <refname>plan</refname>
	  <refpurpose>A testing plan for a module</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">plan</sgmltag> ::= (<link linkend="refentry.description"><sgmltag class="element">description</sgmltag></link>, <link linkend="refentry.step"><sgmltag class="element">step</sgmltag></link>+)</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">plan</sgmltag>
	  outlines one plan for testing a module.  <sgmltag
	  class="element">Plan</sgmltag> consists of a general test plan <link
	  linkend="refentry.description"><sgmltag
	  class="element">description</sgmltag></link> followed by one or more
	  specfic test plan <link linkend="refentry.step"><sgmltag
	  class="element">step</sgmltag></link>s.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain element <sgmltag
	  class="element">plan</sgmltag>: <link
	  linkend="refentry.testing"><sgmltag
	  class="element">testing</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== section -->
      <refentry id="refentry.section">
	<refnamediv>
	  <refname><sgmltag class="element">section</sgmltag></refname>
	  <refpurpose>A titled section sub-division</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">section</sgmltag> ::= (<link linkend="refentry.section"><sgmltag class="element">section</sgmltag></link>|<link linkend="refentry.developer"><sgmltag class="element">developer</sgmltag></link>|<link linkend="refentry.p"><sgmltag class="element">p</sgmltag></link>|<link linkend="refentry.latex"><sgmltag class="element">latex</sgmltag></link>|<link linkend="refentry.figure"><sgmltag class="element">figure</sgmltag></link>|<link linkend="refentry.pre"><sgmltag class="element">pre</sgmltag></link>|
	    <link linkend="refentry.orderedlist"><sgmltag class="element">orderedlist</sgmltag></link>|<link linkend="refentry.unorderedlist"><sgmltag class="element">unorderedlist</sgmltag></link>|<link linkend="refentry.desclist"><sgmltag class="element">desclist</sgmltag></link>|<link linkend="refentry.note"><sgmltag class="element">note</sgmltag></link>|<link linkend="refentry.tip"><sgmltag class="element">tip</sgmltag></link>|<link linkend="refentry.warning"><sgmltag class="element">warning</sgmltag></link>)*</synopsis>
	  </refsect2>
	  <refsect2>
	    <title>Attributes</title>
	    <informaltable>
	      <tgroup cols="3">
		<thead>
		  <row>
		    <entry>Name</entry>
		    <entry>Type</entry>
		    <entry>Default</entry>
		  </row>
		</thead>
		<tbody>
		  <row>
		    <entry><sgmltag class="attribute">id</sgmltag></entry>
		    <entry>ID</entry>
		    <entry><emphasis>None</emphasis></entry>
		  </row>
		</tbody>
	      </tgroup>
	    </informaltable>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">section</sgmltag> is
	  a titled sub-division of the documentation elements <link
	  linkend="refentry.description"><sgmltag
	  class="element">description</sgmltag></link>, <link
	  linkend="refentry.net"><sgmltag
	  class="element">net</sgmltag></link>, <link
	  linkend="refentry.step"><sgmltag
	  class="element">step</sgmltag></link>.  <sgmltag
	  class="element">Section</sgmltag> elements may be
	  nested.</para>
	</refsect1>
	<refsect1>
	  <title>Attributes</title>
	  <variablelist>
	    <varlistentry>
	      <term><sgmltag class="attribute">id</sgmltag></term>
	      <listitem>
		<para><sgmltag class="attribute">Id</sgmltag> is an
		identifying string for a <sgmltag
		class="element">section</sgmltag> element. It must be unique
		within a module description and must begin with a letter.</para>
		<para>Attribute <sgmltag class="attribute">id</sgmltag>
		is used with element <link linkend="refentry.xref"><sgmltag
		class="element">xref</sgmltag></link> to create cross-references
		within a module description document.</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag
	  class="element">section</sgmltag>: <link
	  linkend="refentry.description"><sgmltag
	  class="element">description</sgmltag></link>, <link
	  linkend="refentry.net"><sgmltag
	  class="element">net</sgmltag></link>, <link
	  linkend="refentry.section"><sgmltag
	  class="element">section</sgmltag></link>, <link
	  linkend="refentry.step"><sgmltag
	  class="element">step</sgmltag></link>.</para>
	</refsect1>
      </refentry>
      
      <!--===== step -->
      <refentry id="refentry.step">
	<refnamediv>
	  <refname>step</refname>
	  <refpurpose>Describes one step in a module testing process</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">step</sgmltag> ::= (<link linkend="refentry.section"><sgmltag class="element">section</sgmltag></link>|<link linkend="refentry.developer"><sgmltag class="element">developer</sgmltag></link>|<link linkend="refentry.p"><sgmltag class="element">p</sgmltag></link>|<link linkend="refentry.latex"><sgmltag class="element">latex</sgmltag></link>|<link linkend="refentry.figure"><sgmltag class="element">figure</sgmltag></link>|<link linkend="refentry.pre"><sgmltag class="element">pre</sgmltag></link>|
	    <link linkend="refentry.orderedlist"><sgmltag class="element">orderedlist</sgmltag></link>|<link linkend="refentry.unorderedlist"><sgmltag class="element">unorderedlist</sgmltag></link>|<link linkend="refentry.desclist"><sgmltag class="element">desclist</sgmltag></link>|<link linkend="refentry.note"><sgmltag class="element">note</sgmltag></link>|<link linkend="refentry.tip"><sgmltag class="element">tip</sgmltag></link>|<link linkend="refentry.warning"><sgmltag class="element">warning</sgmltag></link>)*</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">step</sgmltag>
	  describes one step in a module's test plan.</para>
	  <para><sgmltag class="element">Step</sgmltag>'s content
	  model is identical to  <link linkend="refentry.description"><sgmltag
	  class="element">description</sgmltag></link>'s content model.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag
	  class="element">step</sgmltag>: <link linkend="refentry.plan"><sgmltag
	  class="element">plan</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== summary -->
      <refentry id="refentry.summary">
	<refnamediv>
	  <refname><sgmltag class="element">summary</sgmltag></refname>
	  <refpurpose>summarizes a module's purpose</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">summary</sgmltag> ::= #PCDATA | <link linkend="refentry.firstterm"><sgmltag class="element">firstterm</sgmltag></link> | <link linkend="refentry.keyword"><sgmltag class="element">keyword</sgmltag></link> | <link linkend="refentry.userinput"><sgmltag class="element">userinput</sgmltag></link> | <link linkend="refentry.abbr"><sgmltag class="element">abbr</sgmltag></link> | <link linkend="refentry.latex"><sgmltag class="element">latex</sgmltag></link> | <link linkend="refentry.path"><sgmltag class="element">path</sgmltag></link> | <link linkend="refentry.emph"><sgmltag class="element">emph</sgmltag></link> | 
	    <link linkend="refentry.quote"><sgmltag class="element">quote</sgmltag></link> | <link linkend="refentry.rlink"><sgmltag class="element">rlink</sgmltag></link> | <link linkend="refentry.slink"><sgmltag class="element">slink</sgmltag></link> | <link linkend="refentry.ulink"><sgmltag class="element">ulink</sgmltag></link> |  <link linkend="refentry.modref"><sgmltag class="element">modref</sgmltag></link> | <link linkend="refentry.xref"><sgmltag class="element">xref</sgmltag></link> | <link linkend="refentry.email"><sgmltag class="element">email</sgmltag></link> | <link linkend="refentry.cite"><sgmltag class="element">cite</sgmltag></link></synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">summary</sgmltag> summarizes a module's purpose.  A summary should consist of only a few sentences.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag class="element">summary</sgmltag>: <link linkend="refentry.overview"><sgmltag class="element">overview</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== testing -->
      <refentry id="refentry.testing">
	<refnamediv>
	  <refname><sgmltag class="element">testing</sgmltag></refname>
	  <refpurpose>Documents a plan for testing a module</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">testing</sgmltag> ::= (<link linkend="refentry.plan"><sgmltag class="element">plan</sgmltag></link>+)</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">testing</sgmltag>
	  documents a plan for testing a module.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag
	  class="element">testing</sgmltag>: <link
	  linkend="refentry.component"><sgmltag
	  class="element">component</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--=====  ulink -->
      <refentry id="refentry.ulink">
	<refnamediv>
	  <refname><sgmltag class="element">ulink</sgmltag></refname>
	  <refpurpose>A <acronym>URL</acronym>-based link.</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">ulink</sgmltag> ::= (#PCDATA|<link linkend="refentry.firstterm"><sgmltag class="element">firstterm</sgmltag></link>|<link linkend="refentry.keyword"><sgmltag class="element">keyword</sgmltag></link>|<link linkend="refentry.userinput"><sgmltag class="element">userinput</sgmltag></link>|<link linkend="refentry.abbr"><sgmltag class="element">abbr</sgmltag></link>|<link linkend="refentry.latex"><sgmltag class="element">latex</sgmltag></link>|<link linkend="refentry.path"><sgmltag class="element">path</sgmltag></link>|<link linkend="refentry.emph"><sgmltag class="element">emph</sgmltag></link>|<link linkend="refentry.quote"><sgmltag class="element">quote</sgmltag></link>)</synopsis>
	  </refsect2>
	  <refsect2>
	    <title>Attributes</title>
	    <informaltable>
	      <tgroup cols="3">
		<thead>
		  <row>
		    <entry>Name</entry>
		    <entry>Type</entry>
		    <entry>Default</entry>
		  </row>
		</thead>
		<tbody>
		  <row>
		    <entry>url</entry>
		    <entry>CDATA</entry>
		    <entry><emphasis>Required</emphasis></entry>
		  </row>
		</tbody>
	      </tgroup>
	    </informaltable>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">ulink</sgmltag> is a
	  <acronym>URL</acronym>-based link.  Attribute <sgmltag
	  class="attribute">url</sgmltag> provides the link's target
	  address.  <sgmltag class="element">Ulink</sgmltag>'s content
	  provides the link's text.</para>
	</refsect1>
	<refsect1>
	  <title>Attributes</title>
	  <variablelist>
	    <varlistentry>
	      <term><sgmltag class="attribute">url</sgmltag></term>
	      <listitem>
		<para>Attribute <sgmltag
		class="attribute">url</sgmltag>'s value is the link's
		target <acronym>URL</acronym>.</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag
	  class="element">ulink</sgmltag>: <link
	  linkend="refentry.title"><sgmltag
	  class="element">title</sgmltag></link>, <link
	  linkend="refentry.summary"><sgmltag
	  class="element">summary</sgmltag></link>, <link
	  linkend="refentry.author"><sgmltag
	  class="element">author</sgmltag></link>, <link
	  linkend="refentry.caption"><sgmltag
	  class="element">caption</sgmltag></link>, <link
	  linkend="refentry.p"><sgmltag
	  class="element">p</sgmltag></link>.</para>
	</refsect1>
      </refentry>

      <!--===== widget -->
      <refentry id="refentry.widget">
	<refnamediv>
	  <refname>widget</refname>
	  <refpurpose>The generic name of a <acronym>GUI</acronym>element (e.g. scrollbar)</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">widget</sgmltag> ::= (#PCDATA)</synopsis>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">widget</sgmltag> is
	  the generic name of an element in a <acronym>GUI</acronym>, e.g.
	  <quote>scrollbar</quote>.</para>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag
	  class="element">widget</sgmltag>: <link linkend="refentry.parameter"><sgmltag class="element">parameter</sgmltag></link></para>
	</refsect1>
      </refentry>

      <!--===== xref  -->
      <refentry id="refentry.xref">
	<refnamediv>
	  <refname><sgmltag class="element">xref</sgmltag></refname>
	  <refpurpose>An intra-document cross-reference</refpurpose>
	</refnamediv>
	<refsect1>
	  <title>Synopsis</title>
	  <refsect2>
	    <title>Content Model</title>
	    <synopsis><sgmltag class="element">xref</sgmltag> ::=
	    (#PCDATA)</synopsis>
	  </refsect2>
	  <refsect2>
	    <title>Attributes</title>
	    <informaltable>
	      <tgroup cols="3">
		<thead>
		  <row>
		    <entry>Name</entry>
		    <entry>Type</entry>
		    <entry>Default</entry>
		  </row>
		</thead>
		<tbody>
		  <row>
		    <entry><sgmltag class="attribute">target</sgmltag></entry>
		    <entry>IDREF</entry>
		    <entry><emphasis>Required</emphasis></entry>
		  </row>
		</tbody>
	      </tgroup>
	    </informaltable>
	  </refsect2>
	</refsect1>
	<refsect1>
	  <title>Description</title>
	  <para>Element <sgmltag class="element">xref</sgmltag> is an
	  intra-document cross-reference.  <sgmltag class="element">Xref</sgmltag>'s <sgmltag class="attribute">target</sgmltag> attribute provides the id of the cross-referenced element.</para>
	</refsect1>
	<refsect1>
	  <title>Attributes</title>
	  <variablelist>
	    <varlistentry>
	      <term><sgmltag class="attribute">target</sgmltag></term>
	      <listitem>
		<para>Attribute <sgmltag class="attribute">target</sgmltag> specifies the id of the cross-referenced element.</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</refsect1>
	<refsect1>
	  <title>Parents</title>
	  <para>The following elements contain <sgmltag
	  class="element">modref</sgmltag>: <link
	  linkend="refentry.title"><sgmltag
	  class="element">title</sgmltag></link>, <link
	  linkend="refentry.summary"><sgmltag
	  class="element">summary</sgmltag></link>, <link
	  linkend="refentry.author"><sgmltag
	  class="element">author</sgmltag></link>, <link
	  linkend="refentry.caption"><sgmltag
	  class="element">caption</sgmltag></link>, <link
	  linkend="refentry.p"><sgmltag
	  class="element">p</sgmltag></link>.</para>
	</refsect1>
      </refentry>


    </reference>
  </part>
</book>
