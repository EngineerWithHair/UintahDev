<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->

<faq>
<title>Developer FAQ</title>
  <description> 
    <para> 
      This FAQ includes questions of interest to SCIRun developers.
    </para> 
  </description>

  <entry>
    <keywords>memory, unmapping, leaks, sgi</keywords>
    <question>
      <para>
	Recently I've been getting the following message across my screen while
	running SCIRun on my sgi octane:
      </para>
      <pre>
Error unmapping memory
munmap: errno=16
Unmap failed - leaking memory
      </pre>
      <para>
	Is this something that I'm causing via a coding error or is this a
	memory issue with my machine?
      </para>
    </question>
    <answer>
      <para>
	There is nothing wrong with your machine, nor is it your fault.  It
	is something weird about IRIX and the SCIRun memory allocator that
	has never been tracked down, and it is a fairly rare occurrence.
      </para>
    </answer>
  </entry>
  <entry>
    <keywords>geometry object, color</keywords>
    <question>
      <para>
	I created some simple geometry objects like cylinders, but I don't
	know how to customize their color, anyone knows that?
      </para>
    </question>
    <answer>
      <para>
	We have container classes for GeomObj's -- these are themselves
	GeomObj's that contain one of more other GeomObj's inside of them.
	They're very useful for building up scene graphs.  The
	container you want to use is a GeomMaterial -- its constructor
	takes a GeomObj (e.g. a GeomCylinder) and a MaterialHandle.  (Note:
	the constructor for a Material can be as simple as passing in a
	Color triple!)
      </para>
    </answer>
  </entry>
  <entry>
    <keywords></keywords>
    <question>
      <para>
	I created a user data type, but I don't know how to specify a new
	color to represent its port type in the module. Now I'm using
	yellow, the same color as field.
      </para>
    </question>
    <answer>
      <para>
	When you created the new Port, you added a file into
	Dataflow/Ports/ -- the .cc file for your new Port type should have
	a specification for a name and for a color.  See
	SCIRun/src/Dataflow/Ports/MatrixPort.cc as an example.
      </para>
    </answer>
  </entry>

  <entry>
    <keywords>GUI, GuiInt, GuiDouble, GuiString</keywords>
    <question>
      <para>
	When I save my network, why don't the settings in my modules GUI get saved?
      </para>
    </question>
    <answer>
      <para>
	You need to use GuiVars.  these are how you share a variable between 
	C++ and tcl, and are also the only values that get saved to the tcl 
	scripts.

	Look and any module with a gui for an example, Look for GuiString or 
	GuiInt or GuiDouble, and in particular look at their constructor.   
	You need to synch with the tcl side by specifying the name of the var 
	on the tcl side.  That will be reffered to on the tcl side like so...
      </para>
      <para>
	C++ side:
      </para>

      <pre>
	GuiInt myint_;

	// Initialization in constructor --
	myint_("myint", id, &lt;plus whatever other args it takes...&gt;)
      </pre>
      <para>
	tcl side:
      </para>

      <pre>
	set $this-myint 1    # or whatever value you want
      </pre>
      <para>
	Look at ShowField.cc and .tcl for examples.
      </para>
    </answer>
  </entry>
</faq>
