<?xml version="1.0"?>

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->

<!DOCTYPE article 
  PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
  "Utilities/XML/Docbook_dtd/docbookx.dtd" [
<!ENTITY edition SYSTEM "edition.xml">
]>

<article class="techreport">
<articleinfo>
<author>
<firstname>Ted</firstname>
<surname>Dustman</surname>
<affiliation>
<orgname>Scientific Computing and Imaging Institute</orgname>
<address>
<street>50 S. Central Campus Dr.</street>
<city>Salt Lake City</city>
<state>UT</state>
<postcode>84112</postcode>
</address>
</affiliation>
</author>
</articleinfo>
<title>The Doc Tree</title>

<section>
<title id="sec.overview">Overview</title>
<para><xref linkend="tbl.doc-tree"/> shows the organization of the
doc tree.  It  shows only those files that are part of CVS.
Generated files (aka products) are discussed in a <link linkend="sec.srcsprds">later</link> section.</para>
<para>
<table id="tbl.doc-tree">
<title>Doc Tree Organization (edition &edition;)</title>
<tgroup cols="2">
<thead>
<row>
<entry>Directory</entry>
<entry>Description of Content</entry>
</row>
</thead>
<tbody>
<row>
<entry><filename>doc</filename></entry>
<entry><para>Root of doc tree.  <filename>index.html</filename> is the main
cover page for the documentation tree.  <filename>Makefile</filename>
invokes sub-make files.</para></entry>
</row>
<row>
<entry><filename>doc/Utilities/XML</filename></entry>
<entry>
<para>XSL style files, DTDs and CEDs (precompiled dtds for use with PSGML
mode), and XML related scripts.</para>
</entry>
</row>
<row>
<entry><filename>doc/Utilities/TeX</filename></entry>
<entry>
<para>Latex related style files, macros files, and scripts.
</para>
</entry>
</row>
<row>
<entry><filename>doc/Utilities/HTML</filename></entry>
<entry><para>CSS style files, javascript sources, ans HTML related
scripts.</para></entry>
</row>
<row>
<entry><filename>doc/Utilities/Figures</filename></entry>
<entry><para>Shared figures (e.g. page header and footer banners).</para></entry>
</row>
<row>
<entry><filename>doc/User</filename></entry>
<entry>
<para>User documentation root.  <filename>index.html</filename> is the
cover page for SCIRun user documentation.  <filename>Makefile</filename>
invokes sub-make files.
</para>
</entry>
</row>
<row>
<entry><filename>doc/User/Tutorial</filename></entry>
<entry><para>HTML sources and figures for the SCIRun Tutorial</para></entry>
</row>
<row>
<entry><filename>doc/User/Guide</filename></entry>
<entry><para>Latex sources for the SCIRun users guide.
<filename>Makefile</filename> for generating users guide.</para></entry>
</row>
<row>
<entry><filename>doc/User/FAQ</filename></entry>
<entry><para>XML sources for the user FAQ.</para></entry>
</row>
<row>
<entry><filename>doc/Developer/</filename></entry>
<entry>
<para>
Developer documentation root. <filename>index.html</filename> is the cover
page for SCIRun developer documentation.
</para>
</entry>
</row>
<row>
<entry><filename>doc/Developer/Guide</filename></entry>
<entry>
<para>XML and HTML sources for the SCIRun developers
guide. <filename>Makefile</filename> for generating developers guide.</para>
</entry>
</row>
<row>
<entry><filename>doc/Developer/FAQ</filename></entry>
<entry>
<para>XML sources for developer FAQ.</para>
</entry>
</row>
<row>
<entry><filename>doc/Developer/CodeViews</filename></entry>
<entry>
<para>Tools (Makefile, configuration file, and script) for building source
code (C++) based documentation using Doxygen.
</para>
</entry>
</row>
<row>
<entry><filename>doc/Developer/Modules</filename></entry>
<entry>
<para>
<filename>Makefile</filename> for building XML and Latex based module
descriptions.  <filename>index.html</filename> is cover page for module
descriptions. 
</para>
</entry>
</row>
<row>
<entry><filename>doc/Installation/</filename></entry>
<entry>
<para>Installation documentation root.  <filename>Makefile</filename>
invokes sub-makes.  <filename>index.html</filename> is the cover page for
SCIRun installation documentation.</para>
</entry>
</row>

<row>
<entry><filename>doc/Installation/Guide</filename></entry>
<entry>
<para>XML sources for installation guide and
<filename>Makefile</filename> for generating the guide.</para>
</entry>
</row>
<row>
<entry><filename>doc/Installation/FAQ</filename></entry>
<entry>
<para>XML sources for installation FAQ.</para>
</entry>
</row>
<row>
<entry><filename>doc/FAQ</filename></entry>
<entry>
<para>XML source (<filename>faqbook.xml</filename>) for the SCIRun FAQ book
(it merely assembles FAQ sources into book form).</para>
<para><filename>Makefile</filename> generates the FAQ book.</para>
</entry>
</row>
</tbody>
</tgroup>
</table>
</para>
</section>

<section>
<title id="sec.tools">Tools</title>
<para>
The following tools are needed to build SCIRun documentation:
<variablelist>
<varlistentry>
<term><ulink url="http://www.gnu.org/software/make/make.html">GNU Make</ulink></term>
<listitem>
<para>GNU's version of the make utility.  Makefiles in the doc tree are
incompatible with other versions of the make utility.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term><ulink url="http://www.gnu.org/software/tar/tar.html">GNU Tar</ulink></term>
<listitem>
<para>GNU's version of tar.  Tar is used to package the documentation into
a single file (tarball) for distribution.  GNU tar must be used to extract
documentation from its tarball.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Java</term>
<listitem>
<para>Java is, of course, a programming language.  Saxon (see below)
requires Java.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><ulink url="http://saxon.sourceforge.net/">Saxon</ulink></term>
<listitem>
<para>Saxon is an XSLT processor which applies XSL stylesheets to XML
sources to translate them to other forms (e.g. HTML).  Saxon is written in
Java.  Saxon is used to translate the Developers guide, the Installation
guide, the FAQ book, and the XML based module descriptions to HTML.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><ulink url="http://www.latex-project.org/">Latex</ulink></term>
<listitem>
<para>Latex is a document markup language and typesetting system.  The Users
guide and some module descriptions require latex.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><ulink url="http://www.latex2html.org">Latex2Html</ulink></term>
<listitem>
<para>The latex2html tool translates latex documents to HTML.  It is used to
translate the Users guide and latex module descriptions to HTML.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><ulink url="http://www.stack.nl/~dimitri/doxygen/">Doxygen</ulink></term>
<listitem>
<para>Doxygen is a documentation system for C++.  It both generates and extracts
documentation from C++ source files.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><ulink url="http://docbook.sourceforge.net/">DocBook Style Sheets</ulink></term>
<listitem>
<para>The DocBook stylesheets translate DocBook XML documents (Developers
guide and Installation guide) to HTML.</para> 
<para>There are 3 SCIRun
specific stylesheets that must be copied into the DocBook distribution. The
files <filename>doc/Utilities/XML/srdocbook.xsl</filename>,
<filename>doc/Utilities/XML/srdocbook-common.xsl</filename>, and
<filename>doc/Utilities/XML/srdocbook-chunk.xsl</filename> must be copied
to the <filename>html</filename> directory of the DocBook
distribution.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><ulink url="http://www.pragmaticprogrammer.com/ruby/">Ruby</ulink></term>
<listitem>
<para>A number of scripts in the doc tree are written in the programming language Ruby.</para>
</listitem>
</varlistentry>
</variablelist>
</para>

</section>

<section>
<title id="sec.makedocs">Making Docs</title>
<para>This section assumes that all necessary
<link linkend="sec.tools">tools</link> have been installed.</para>
<para>Three environment variables must be set before building
the documentation.
<simplelist>
<member><envar>CLASSPATH</envar> must contain the path of the
file <filename>saxon.jar</filename> within the Saxon distribution.
</member>
<member><envar>STYLESHEET_PATH</envar> must point to the location of the
<filename>html</filename> directory within the DocBook stylesheet
distribution.
</member>
<member>
<envar>WITH_CV</envar> should be set to the string "true" if you want Doxygen
to build the C++ based documentation.
</member>
</simplelist>
For instance (assuming a Bourne type shell):
<programlisting>
export CLASSPATH=/usr/local/lib/Saxon/saxon.jar
export STYLESHEET_PATH=/usr/local/xsl/docbook/html/
export WITH_CV=true
</programlisting>
</para>
<para>Now to make (all) docs <command>cd</command> to the
<filename>doc</filename> directory and type <command>make</command>.
</para>
<para>You may want to build one particular doc or a particular set of docs.
You can do 
so by <command>cd</command>'ing to the directory of interest and typing
<command>make</command>.  For example:
<programlisting>
cd doc/Developer; make        # Make all developer docs.
</programlisting> or
<programlisting>
cd doc/Developer/Guide; make  # Make just the developer's guide.
</programlisting>
</para>
<para>Type <command>make tarball</command> if you want to also create a
doc tarball.</para>
<para>Type <command>make clean</command> to remove "incidental" files (but
no products).  Type <command>make veryclean</command> to remove products
(generated files).</para>
</section>

<section id="sec.srcsprds">
<title>Sources, Products, and Makefiles</title>
<para>The term <firstterm>sources</firstterm> refers to
files that are created and edited manually.  The term
<firstterm>products</firstterm> refers to files that are generated from sources by a
tool of some sort.  Sources are always part of the CVS repository and
products never are.</para>.
<para>
Makefiles are responsible for generating products from sources.
<xref linkend="tbl.srcprd"/> shows sources, corresponding Makefiles, and
the products generated by the Makefiles.
<table id="tbl.srcprd">
<title>Sources, Makefiles, and Products</title>
<tgroup cols="3">
<thead>
<row>
<entry>Source(s)</entry>
<entry>Makefile</entry>
<entry>Product(s)</entry>
</row>
</thead>
<tbody>
<row>
<entry>C++ sources in the src side of the tree</entry>
<entry><filename>doc/Developer/CodeViews/Makefile</filename></entry>
<entry><filename>doc/Developer/CodeViews/html/*.html</filename></entry>
</row>
<row>
<entry><filename>doc/Developer/Guide/main.xml</filename>,
<filename>doc/Developer/Guide/dev/*.xml</filename>, and
<filename>doc/Developer/Guide/src/*.xml</filename>.  These are DocBook
sources.</entry>
<entry><filename>doc/Developer/Guide/Makefile</filename></entry>
<entry><filename>doc/Developer/Guide/*.html</filename> (although not all html files are generated).</entry>
</row>
<row>
<entry>Module XML files in the <filename>src</filename> side of the tree
(e.g. <filename>src/Dataflow/XML/*.xml</filename>).</entry>
<entry><filename>doc/Developer/Modules/Makefile</filename></entry>
<entry>HTML files saved with sources, e.g. <filename>src/Dataflow/XML/*.html</filename></entry>
</row>
<row>
<entry><filename>doc/FAQBook/faqbook.xml</filename>,
<filename>doc/Developer/FAQ/faq.xml</filename>,
<filename>doc/Installation/FAQ/faq.xml</filename>, and
<filename>doc/User/FAQ/faq.xml</filename>.</entry> 
<entry>doc/FAQBook/Makefile</entry>
<entry><filename>doc/FAQBook/*.html</filename>.</entry>
</row>
<row>
<entry><filename>doc/Installation/Guide/*.xml</filename>. These are DocBook
sources.</entry>
<entry><filename>doc/Installation/Guide/Makefile</filename></entry>
<entry><filename>doc/Installation/Guide/*.html</filename></entry>
</row>
<row>
<entry><filename>doc/Developer/Guide/*.tex</filename> and xml files on the
<filename>src</filename> side of the tree.</entry>
<entry><filename>doc/Developer/Guide/Makefile</filename></entry>
<entry><filename>doc/Developer/Guide/usersguide.ps</filename> and <filename>doc/Developer/Guide/usersguide/*.html</filename></entry>
</row>
</tbody>
</tgroup>
</table>
</para>

</section>

<section>
<title id="sec.makefiles">Makefile Strategy</title>
<para>The doc tree uses a conventional recursive makefile approach to
building documentation.  Some Makefiles generate products while others
merely invoke sub-make processes.</para>
<para>Because each Makefile "module" (or
directory) is independent of the others the Makefile system does not suffer
from the problems that can plaque recursive Make systems (although the
current system is not very mp friendly).</para>
<para>The doc tree and its build system were designed so that anyone with
the proper tools could build documentation.  This facilitates the
edit/compile/test/debug cycle.  The doc developer need not wait for the doc
tree to be published on the internal web site before discovering bugs and
errors.  The doc developer can edit sources, invoke make to build products,
test and debug the docs with his web browser, and correct problems all
before committing his changes to the CVS repository.</para>
</section>

<section>
<title id="sec.intwebsite">Publishing to Internal Web Site</title>
<para>
Discuss how docs are published on the internal web site.
</para>
</section>

</article>