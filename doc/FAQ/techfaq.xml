<?xml version="1.0" encoding="UTF-8" ?>
<?xml-stylesheet href="../faq.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<!-- 

  each faq is a collection of entries.  Entries are a paired question and
  answer, along with a set of keywords.  Questions and answers are delimited
  with <p> or <pre> tags.

  <entry>
    <keywords>SGI, endian</keywords>
    <question>
      <p>
        ...
      </p>
      ...
    </question>
    <answer>
      <p>
        ...
      </p>
      ...
    </answer>
  </entry>
          

-->
 
<faq name="Technical FAQ">
  <description>
    <p>
      This FAQ includes questions of a technical nature of interest to people
installing, maintaining, and developing within SCIRun.
    </p>
  </description>
  <entry>
    <keywords>SGI, runtime, pthreads, SIGABRT</keywords>
    <question>
      <p>
        I successfully installed SCIRun and it's required thirdparty software
        (by hand) onto an SGI target install machine, but when I run SCIRun it 
        immediately signals an abort (SIGABRT).
      </p>
      <p>
        The output of SCIRun after it signals the abort looks like this:
      </p>
      <pre>Thread "main"(pid 251775) caught signal SIGABRT (Abort)
Backtrace:
0x5ff69224: SCIRun::Thread::niceAbort(void)
0x5ff7106c: handle_abort_signals
0xc37f7c0: sig_fixup_mask
0xfb11100: prctl
0xc37ee00: pthread_kill
0xc37fef8: _SGIPT_libc_raise
0xc378068: ptctl
0xfaf3e20: raise
0xfa668a4: abort
0xae40958: terminate(void)
0xae40788: __call_terminate
0xae42ba8: __throw
0x5ff72ad0: SCIRun::Thread::os_start(bool)
0x5ff68c7c: SCIRun::Thread::Thread(SCIRun::Runnable*,const
char*,SCIRun::ThreadGroup*,SCIRun::Thread::ActiveState)
0x100057c4: main
251775: main (state=running)
 
Abort signalled by pid: 251775
Occured for thread:
"main"resume(r)/dbx(d)/cvd(c)/kill thread(k)/exit(e)?
      </pre>
    </question>
    <answer>
      <p>
        One or more of the thirdparty libraries was configured and built to
        use (i.e. link against) pthreads.  On SGI machines, SCIRun uses sproc
        threads instead of pthreads.  It is illegal to use both sproc and 
        pthreads in a single process.  When two binaries are linked together
        into a single process at runtime (e.g. scirun and libxerces-c1_4.so)
        an abort is signalled and the process is shutdown.
      </p>
      <p>
        The solution is to rebuild the offending libraries, configuring them
        to _not_ use threads.  Xerces is typically the offending library, 
        although Tcl and others may also be incorrectly configured to use
        threads.  See the <a href="../InstallGuide/ThirdpartyInfo.html">Thirdparty
        Software Installation and Build Information</a> for recommended
	configure arguments for the thirdparty software.  Note that when the
	automatic install script is used, all the software is automatically
        configured and built correctly.
      </p>
    </answer>
  </entry>

  <entry>
    <keywords>Compile, Red Hat, Mandrake, GCC 2.96, GCC 2.97</keywords> 
    <question>
      <p>
        I successfully installed the thirdparty software onto a Redhat or
        Mandrake (v8.0 +) linux target install machine, but when I try
        to build SCIRun it fails while compiling.
      </p>
    </question>
    <answer>
      <p>
        Some linux distributions are shipped with a version of the GCC
        compiler (e.g. 2.96, 2.97) that doesn't work for building SCIRun. 
        For more information, please visit
        <a href="http://www.gnu.org/software/gcc/gcc-2.96.html">the GCC site
        </a> regarding this problem.
      </p>
      <p>
        The solution is to update your compiler to version 2.95.2 or 2.95.3.
        You can check your existing compilers version by typing:
      </p>
      <pre>gcc --version</pre>
      <p> 
        or
      </p>
      <pre>g++ --version</pre>
    </answer>
  </entry>

  <entry>
    <keywords>SGI, LANG:std, MIPSpro</keywords>
    <question>
      <p>
	I successfully installed the thirdparty software onto an SGI
        target install machine, but when I try to build SCIRun it fails
        during the compile phase.
      </p>
      <p>
        The error message displayed contains the following warning:
      </p>
      <pre>...
Warning: Option 'std' not in group 'LANG' (LANG:std)
...
      </pre>
    </question>
    <answer>
      <p>
        The MIPSpro compiler on your target install machine is too old.
        SCIRun requires version 7.3.1.1m at a minimum.
      </p>
    </answer>
  </entry>

  <entry>
    <keywords>SGI, Linux, ~</keywords>
    <question>
      <p>
        I'm trying to install SCIRun or the thirdparty software into 
        my home directory, but it fails when building.
      </p>
    </question>
    <answer>
      <p>
        When installing any of the software into your home directory
        be sure to use complete and absolute paths when providing
        configure argumenst.  <b>Do Not</b> use tilde expansion or
        any other short cuts, as they will not be properly expanded
        by the install scripts and makefiles.
      </p>
    </answer>
  </entry>

  <entry>
    <question>
      <p>
        How can I make a 64 bit build of SCIRun?
      </p>
    </question>
    <answer>
      <p>
        64 bit is currently only available on the SGI platform.  To
        build a 64 bit version of SCIRun, you first need to have 64
        bit versions of the thirdparty software.  Then, configure
        SCIRun with the "--enable-64bit" option and rebuild.
      </p>
      <p>
        Unfortunately, most of the required third party software did
        not take 64 bit SGI platforms into account when writing
        configure scripts and makefiles. However, with some effort, it
        is possible to build all the software in 64 bit. In general,
        to get 64 bit versions of the third party software it is
        necessary to edit Makefiles such that the CFLAGS and LFLAGS
        macros have "-64" listed instead of "-n32". In the case of the
        tcl distributions, this means editing the makefiles (after
        configuring) by hand and replacing all instances of "-n32"
        with "-64". For Xerces, this means changing the environment
        variables listed above replacing all instances of " -n32 "
        with " -64 " before configuring. 
      </p>       
    </answer>
  </entry>

  <entry>
    <question>
      <p>
        I want to build the thirdparty software by hand.  What are the
        gotchas and bugs I should be aware of?
      </p>
    </question>
    <answer>
      <p>
        <b><i>Building [incr Tcl/Tk]</i></b>
      </p>
    
      <p> 
        The [incr Tcl/Tk] distribution listed in the system
        requirements has a bug in it: the installation scripts are
        bundled without execute permissions.  Before attempting to
        configure or make [incr Tcl/Tk], type the following commands:  
      </p>

      <pre class="example">cd itcl3.1.0/config
chmod a+x install-sh mkinstalldirs
      </pre>

      <p>
        Then, proceed normally with the configure and make.
      </p>

      <p>
        <b><i>Building BLT</i></b>
      </p>
    
      <p>
        The BLT make files have bugs in them that cause apparent
        errors in the building process. To build without the apparent
        errors, type the following (in the order shown) after
        configuring: 
      </p> 

      <pre class="example">cd blt2.4u
make 
cd src/shared
make 
cd ../..
make -k install
cd src/shared
make -k install
      </pre>

      <p>
        <b><i>Building Xerces-C++</i></b>
      </p>

      <p>
        Xerces-C++ uses a non-standard configure mechanism.  You must
        specify most options as environment variables, and then run
        the configure command with the --prefix option only.
      </p>

      <p>
        The Xerces-C++ configure scripts are bundled without execute
        permissions.  Before attempting to configure, type the following
        commands: 
      </p>

      <pre class="example">cd xerces-c-src1_4_0/src
chmod a+x configure runConfigure
      </pre>

      <p> 
        There is no dependency tree for the copy phase of the xerces
        build, so using a -j flag (number of jobs) as a GNU make
        argument will cause the build to fail. 
      </p>

      <p>
        There is no dependency tree for the "install" target within
        the make files, so passing "install" as an argument to the
        first time "make" is typed will cause the build to
        fail. Instead type "make" first, then "make install."
      </p>

      <p>
        The make system ignores errors in compilation and forces a
        link.  Verify that the build was actually successful by
        checking the size of libxerces-c1_4.so.  The sizes should be:
        ~2.1MB for SGI 32 bit, ~2.4MB for SGI 64 bit, and ~1.4MB for
        linux. 
      </p>
    </answer>
  </entry>
 
  <entry>
    <question>
      <p>
        When I try to configure SCIRun, it says that it cannot find
        header files for one or more of the Tcl distributions, but my 
        system has the correct versions for all the Tcl distributions.
      </p>
    </question>
    <answer>
      <p>
        SCIRun currently requires the full source of Tcl and Tk to be
        installed.  This is required because SCIRun defines a few Tk
        widgets of it's own, and needs some headers from the source that
        aren't included with typical installations.  If your system
        already has the correct Tcl and Tk versions installed, you will
        have to re-install (see above) in order to have the sources
        included. 
      </p>
    </answer>
  </entry>

</faq>
