		 Installation and Build Instructions for SCIRun
			 last modified on May 10, 2000
				 Chris Moulding


Table of Contents

1) System Requirements
2) Installing SCIRun
3) Building SCIRun
4) Running SCIRun
5) Additional Documentation
6) Getting Help
7) Surviving the tcl stuff


1) System Requirements


  For SGI:
    SGI Irix 6.5 (www.sgi.com/software/software.html#IRIX)
    SGI MipsPro 7.3.1 compiler (www.sgi.com/developers/devtools/languages/mipspro.html)

  For Linux:
    Linux 2.2.x 
    GCC compiler collection (ftp://gcc.gnu.org/pub/gcc/releases/gcc-2.95.2/gcc-2.95.2.tar.gz)

  Tcl/Tk 8.0.4 (ftp://ftp.scriptics.com/pub/tcl/tcl8_0/tcl8.0.4.tar.gz  &
                ftp://ftp.scriptics.com/pub/tcl/tcl8_0/tk8.0.4.tar.gz)

  Itcl/Itk 3.0.1 (ftp://ftp.tcltk.com/tcltk/pub/itcl/itcl3.0.1.tar.gz)

  BLT 2.4q (ftp://ftp.tcltk.com/aa004735/pub/blt/BLT2.4q.tar.gz)

  GNU make 3.76.1 (ftp://ftp.gnu.org/pub/gnu/make/make-3.76.1.tar.gz)

  Xerces XML parser 1.1.0 (http://xml.apache.org/dist/xerces-c/stable/Xerces-C-src_1_1_0.tar.gz)
  [^^^^^^ Note: this distribution of xerces won't work.  Use this one:
    /home/sci/data6/sparker/xerces-c/src/xerces-c-src_1_1_0.tar.gz
    ^^^^^ This didn't work either.  This one worked:
          /home/sci/data6/sparker/xerces-c/lib32/libxerces-c1_1.so (tjd)]



2) Installing SCIRun


   unzip and untar the distribution file (SCIRun.tar.gz)
   into the directory where you would like SCIRun to be
   installed, e.g. /usr/local/contrib/SCIRun.  There is no
   "make install" step in the build process, so where ever
   you untar to is where it will be installed.  We'll call
   this directory SCIRUN_TOP from now on.


3) Building SCIRun


   These are the steps for building SCIRun:

   *  Make sure that Tcl, Tk, Itcl/Itk, and BLT are
      built and installed "correctly" on your system.

      This part is the bane of many a users existence,
      so an in depth section on "surviving the tcl
      stuff" is listed below in section 7.

   * Install Xerces if it is not already installed.  

     (!! SGI ONLY !!) SGI users must install a prebuilt version of the xerces
     library from one of the
     cs machines.  If your abi is n32 then get
     /nfs/sci/data6/sparker/xerces-c/lib32/libxerces-c1_1.so.  If your abi is 64 then
     get /nfs/sci/data6/sparker/xerces-c/lib64/libxerces-c1_1.so.

   *  Edit SCIRUN_TOP/src/configure:

      The xerces paths are hardcoded to 
	  
	  XML_LIB_DIR="/usr/local/xerces-c/lib"
	  XML_INCLUDE_DIR="/usr/local/xerces-c/include"

	  find and edit these lines to reflect your system's paths.

   *  Modify your PATH variable if tcl/tk 8.0.4 and Itcl/Itk stuff is installed
      in a non-standard location. 

      Csh command:

        setenv PATH tcl-tk-8.0.4-path/bin:$PATH

      Sh command:

        export PATH=tcl-tk-8.0.4-path/bin:$PATH

   *  Run configure.  From the SCIRUN_TOP/src dir type:

     configure --enable-package="SCIRun"

   *  Finally, run GNU make.  From the SCIRUN_TOP/src dir type:

      make

   It takes about 45 minutes to build SCIRun on a single R10K.
   You can use the -j flag to reduce build time, e.g.

      make -j 32

   will use 32 processors (if available) to build SCIRun.  It
   takes 5 minutes to build SCIRun on 32 R10K's.

   If the build failed, see the section below called
   "Getting help"


4) Running SCIRun


   After a successful build, there is an executable in
   the SCIRUN_TOP/src directory named:

   pse

   Running this will open the SCIRun canvas window and start a
   SCIRun shell (called the SCIRun console) in the shell where
   pse was started from.
   
   If the window does not appear, note any errors
   displayed in the SCIRun console and see the getting
   help section below.  Of course, it might just be
   hiding behind other windows on the desktop!


5) Additional Documentation


   Additional Documentation about SCIRun can be obtained on
   the web at:

   http://www.cs.utah.edu/sci/scirun/


6) Getting Help


   There is a mailing list available for asking questions about
   SCIRun or to get help with resolving a problem.  To subscribe to
   the mailing list, send email to:

   majordomo@cs.utah.edu

   with the following in the body of the message:

   subscribe scirun-develop

   To use the mailing list, simply send your question or problem
   as an email to the list:

   scirun-develop@cs.utah.edu

   To aid in problem resolution, include a verbatim copy of the error(s) 
   displayed (if any) in the SCIRun console.  Also include a short
   description of what you we're doing (running a network, building the
   tree, etc.) and which version of SCIRun you have (PSE 1.0 beta).


7) Surviving the tcl stuff


   The most difficult part of getting SCIRun to work has
   historically been the "tcl stuff".  This is due in part
   because SCIRun depends on exact tcl versions and on a
   "correct" tcl installation, but also because of annoying
   bugs in the tcl distributions.

   Because of these problems we've included this section
   to, hopefully painlessly, guide you through the process.

   The configure and installation steps are very important.
   Not configuring and installing as indicated will cause
   the SCIRun configure to fail.
   
   Be sure to configure and build each package before
   configuring and building the next, i.e. tcl, then tk,
   then itcl/itk and finally blt.

*  First, Get the tcl distributions (tcl, tk, itcl/itk
   and blt).  To assist in locating the distributions, 
   we've included the URL's to them in the System
   requirements section.

*  Second, unzip and untar all distributions into a
   place where you would like to build them.  It doesn't 
   necessarily have to be the installation location.
   an example location is /usr/local/contrib/tcl/src:

     /usr/local/contrib/tcl/src/tcl8.0.4
     /usr/local/contrib/tcl/src/tk8.0.4
     /usr/local/contrib/tcl/src/itcl3.0.1
     /usr/local/contrib/tcl/src/blt2.4q

     We'll call this location TCL_SRC from now on.

*  Third, configure the distribution for a "correct" installation

   Configure the tcl, tk, itcl/itk, and blt distributions as follows (Note:
   INST_DIR is the location of the /lib and /bin dirs where
   you want the final libraries and binaries to be installed, NOT including
   /lib or /bin.  More details about INST_DIR are below):
     
  [ Is the --exec-prefix option necessary in the commands below?  If not
    specified its value defaults to the value specified in the --prefix option. ]

       cd TCL_SRC/tcl8.0.4/unix
       configure --enable-shared --prefix=INST_DIR --exec-prefix=INST_DIR

       cd TCL_SRC/tk8.0.4/unix
       configure --enable-shared --prefix=INST_DIR --exec-prefix=INST_DIR \
                 --with-tcl=TCL_SRC/tcl8.0.4/unix        

       cd TCL_SRC/itcl3.0.1
       configure --enable-shared --prefix=INST_DIR --exec-prefix=INST_DIR \
                 --with-tcl=INST_DIR/lib \
                 --with-tk=INST_DIR/lib

       cd TCL_SRC/blt2.4q
       configure --enable-shared --prefix=INST_DIR --exec-prefix=INST_DIR \
                 --with-tcl=INST_DIR/lib \
                 --with-tk=INST_DIR/lib \
                 --with-cc=cc

   INST_DIR is the location of the /lib and /bin dirs where
   you want the final libraries and binaries to be installed, NOT including
   /lib or /bin.  For example, the following
   
     --prefix=/usr/local/contrib --exec-prefix=/usr/local/contrib

   indicates that the /lib and /bin locations for the example tcl install
   will be
   
     /usr/local/contrib/lib and
     /usr/local/contrib/bin

   INST_DIR must be a full path.  If you build and install the tcl
   distributions into your home directory, do not use ~ to abbreviate
   the path.

*  Fourth ( !! SGI ONLY !!) edit Makefiles

     The Makefiles listed below must be edited as follows

       - Edit the Makefiles to reflect your system's default ABI (either
         n32 or 64). If you're not sure what your system's default
         ABI is, then assume "-n32".  Replace each occurance of "-32"
         with "-n32" or "64".

       - In each Makefile find this line:

           SHLIB_LD =	ld -32 -shared -rdata_shared -rpath /usr/local/lib

         and change it to:

           SHLIB_LD =	ld -n32 -shared -rdata_shared -rpath ${prefix}/lib

         This fixes a problem locating shared libraries when INST_DIR is not
         /usr/local/lib. 

     These are the Makefiles to edit:

        TCL_SRC/tcl8.0.4/unix/Makefile

        TCL_SRC/tk8.0.4/unix/Makefile

        TCL_SRC/itcl3.0.1/itcl/unix/Makefile

        TCL_SRC/itcl3.0.1/itk/unix/Makefile

        TCL_SRC/blt2.4q/src/shared/Makefile
     

*  Fifth, build and install the distribution 

   These commands will build and install tck, tk, itcl, and blt:

     cd TCL_SRC/tcl8.0.4/unix
     make   
     make install

     cd TCL_SRC/tk8.0.4/unix
     make   
     make install

     cd TCL_SRC/itcl3.0.1
     make   
     make install

     cd TCL_SRC/blt2.4q 
     make

   (The next 2 commands may not be needed but they do suppress frightening error
    messages during installation of blt.)

     cd TCL_SRC/blt2.4q/src/shared
     make libBLTlite24.so bltsh24

     cd TCL_SRC/blt2.4q 
     make install

   The makes should work fine for tcl, tk and itcl/itk, but blt may not work.
   The blt distribution may incorrectly handle "strdup()".
   If you get an error related to "strdup()", comment out the
   strdup() function in bltUtil.c (with #if 0) and continue the build.

   We have a lot of experience with failed builds for these
   distributions, so feel free to contact us if you run into problems.
     
*  Finally, set your paths

   Csh commands:

     setenv LD_LIBRARY_PATH INST_DIR/lib:$LD_LIBRARY_PATH
     setenv PATH INST_DIR/bin:$PATH  

   Sh commands:

     export LD_LIBRARY_PATH=INST_DIR/lib:$LD_LIBRARY_PATH
     export PATH=INST_DIR/bin:$PATH

   ( !! SGI ONLY !!) In the previous commands,
   LD_LIBRARY_PATH may actually be LD_LIBRARYN32_PATH
   or LD_LIBRARY64_PATH if your system's default ABI
   (Application Binary Interface) is n32 or 64.