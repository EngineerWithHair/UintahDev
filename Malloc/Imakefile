
#include <config/sci.cf>

#ifdef SCI_DIR_Malloc

LOCALINCLUDES = -I.

#ifdef SCI_MACHINE_SGI
LOCKS = lock.o
#endif

OBJS = new.o  malloc.o  Allocator.o  AllocOS.o   $(LOCKS)
SRCS = new.cc malloc.cc Allocator.cc AllocOS.cc \
	test1.cc test2.cc test3.cc test4.cc test5.cc test6.cc \
	test7.cc test8.cc test9.cc test10.cc test11.cc test12.cc \
	test13.cc test14.cc

LIBNAME = Malloc

SCIDependTarget($(SRCS))
SCINormalLibraryTarget($(LIBNAME),$(OBJS))

#ifdef SCI_MACHINE_SGI
lock.o: lock_mips.s
	as -o lock.o lock_mips.s -mips2
#endif

LDFLAGS =
SCIProgramTarget(test1, test1.o, libMalloc.a, $(LDFLAGS))
SCIProgramTarget(test2, test2.o, libMalloc.a, $(LDFLAGS))
SCIProgramTarget(test3, test3.o, libMalloc.a, $(LDFLAGS))
SCIProgramTarget(test4, test4.o, libMalloc.a, $(LDFLAGS))
SCIProgramTarget(test5, test5.o, libMalloc.a, $(LDFLAGS))
SCIProgramTarget(test6, test6.o, libMalloc.a, $(LDFLAGS))
SCIProgramTarget(test7, test7.o, libMalloc.a, $(LDFLAGS))
SCIProgramTarget(test8, test8.o, libMalloc.a, $(LDFLAGS))
SCIProgramTarget(test9, test9.o, libMalloc.a, $(LDFLAGS))
SCIProgramTarget(test10, test10.o, libMalloc.a, $(LDFLAGS))
SCIProgramTarget(test11, test11.o, libMalloc.a, $(LDFLAGS))
SCIProgramTarget(test12, test12.o, libMalloc.a, $(LDFLAGS))
SCIProgramTarget(test13, test13.o, libMalloc.a, $(LDFLAGS))
SCIProgramTarget(test14, test14.o, libMalloc.a, $(LDFLAGS))

#else
all:
depend::

           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak core errs ,* *~ .emacs_* tags TAGS make.log MakeOut

#endif
