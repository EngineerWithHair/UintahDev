/*
 * This file was automatically generated by SCC - do NOT edit!
 * You should edit ThreadListener.scc instead 
 */

#ifndef SCI_THREAD_THREADLISTENER_H
#define SCI_THREAD_THREADLISTENER_H 1

/*
 * An object may implement this interface and register with
 * <b>Thread::</b><i>addListener</i> in order to receive events
 * regarding thread creation, deletion, and other thread activity.
 * These events are received from the <tt>eventQueue</tt> mailbox.
 * This interface is still under design and not yet completely
 * specified.
 */
class Thread;
struct ThreadEvent;


class ThreadListener {
    friend class Thread;
    void send_event(Thread*, ThreadEvent) ;
protected:
    ThreadListener() ;
    virtual ~ThreadListener() ;
    bool overflow;
};

#endif
