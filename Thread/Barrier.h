/*
 * This file was automatically generated by SCC - do NOT edit!
 * You should edit Barrier.scc instead 
 */

#ifndef SCI_THREAD_BARRIER_H
#define SCI_THREAD_BARRIER_H 1

/*
 * Barrier synchronization primitive.  Provides a single <i>wait</i>
 * method to allow a set of threads to block at the barrier until all
 * threads arrive.
 */
class ThreadGroup;





class Barrier_private;
class Barrier {
    Barrier_private* priv;
    const char* name;
protected:
    int nthreads;
    ThreadGroup* threadGroup;
public:
    Barrier(const char* name, int nthreads);
    Barrier(const char* name, ThreadGroup* group);
    virtual ~Barrier();
    void wait();
};

#endif
