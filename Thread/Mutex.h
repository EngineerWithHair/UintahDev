/*
 * This file was automatically generated by SCC - do NOT edit!
 * You should edit Mutex.scc instead 
 */

#ifndef SCI_THREAD_MUTEX_H
#define SCI_THREAD_MUTEX_H 1

/*
 * Provides a simple <b>Mut</b>ual <b>Ex</b>clusion primitive.  Atomic
 * <b>lock()</b> and <b>unlock()</b> will lock and unlock the mutex.
 * This is not a recursive Mutex (See <b>RecursiveMutex</b>), and calling
 * lock() in a nested call will result in an error or deadlock.
 */





class Mutex_private;
class Mutex {
    Mutex_private* priv;
    const char* name;
public:
    Mutex(const char* name);
    ~Mutex();
    void lock();
    bool try_lock();
    void unlock();
};

#endif
